/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  1.6                                   |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

application     cfdemSolverPiso;

startFrom       startTime;

startTime       0;

stopAt          endTime;

endTime         1.0;

deltaT          0.000001;

writeControl    adjustableRunTime;

writeInterval   0.01;

purgeWrite      0;

writeFormat     ascii;

writePrecision  6;

writeCompression uncompressed;

timeFormat      general;

timePrecision   6;

runTimeModifiable yes;

adjustTimeStep  no;

maxCo 0.1;

//libs ( "libgroovyBC.so" "libfiniteVolumeCFDEM.so");

// functions
// (
// 
//     probes
//     {
//         type        probes;
//         // Where to load it from
//         functionObjectLibs ( "libsampling.so" );  
//         // Name of the directory for probe data
//         name        probes;
//         probeLocations
//         (
//             (0.00003 0 0.0001)
//             (0.00003 0 0.0026)
//             (0.00003 0 0.0051)
//             (0.00003 0 0.0076)
//             (0.00003 0 0.0101)
//             (0.00003 0 0.0126)
//             (0.00003 0 0.0151)
//             (0.00003 0 0.0176)
//             (0.00003 0 0.0201)
//             (0.00003 0 0.0226)
//             (0.00003 0 0.0251)
//             (0.00003 0 0.0276)
//             (0.00003 0 0.0301)
//             (0.00003 0 0.0326)
//             (0.00003 0 0.0351)
//             (0.00003 0 0.0375)
//             (0.00003 0 0.0401)
//             (0.00003 0 0.0426)
//             (0.00003 0 0.0451)
//             (0.00003 0 0.0476)
//             (0.00003 0 0.0529)
//         );
// 
//         // Fields to be probed
//         fields ( p U voidfraction volAverage_voidfraction voidfractionNext voidfractionPrev);
// 
//         // Write at same frequency as fields
//         outputControl   timeStep;//outputTime;
//         outputInterval  1;
//     }
// 
//    /*pressureDrop
//    {
//      type patchAverage;
//      functionObjectLibs
//      (
//          "libsimpleFunctionObjects.so"
//      );
//      verbose true;
//      patches
//      (
//          inlet
//          outlet
//      );
//      fields
//      (
//          p
//      );
//      factor  1;
//    }*/
// 
//     volFlow_inlet
//     {
//         type            faceSource;
//         functionObjectLibs ("libfieldFunctionObjects.so");
//         enabled         true;
//         outputControl   outputTime;//timeStep;
//         log             true;
//         valueOutput     true;
//         source          patch;
//         sourceName      inlet;
//         operation       sum;
// 
//         fields
//         (
//             phi
//         );
//         surfaceFormat null;
//     }
// 
//     volFlow_outlet
//     {
//         type            faceSource;
//         functionObjectLibs ("libfieldFunctionObjects.so");
//         enabled         true;
//         outputControl   outputTime;//timeStep;
//         log             true;
//         valueOutput     true;
//         source          patch;
//         sourceName      outlet;
//         operation       sum;
// 
//         fields
//         (
//             phi
//         );
//         surfaceFormat null;
//     }
// 
//     volFlow_wall
//     {
//         type            faceSource;
//         functionObjectLibs ("libfieldFunctionObjects.so");
//         enabled         true;
//         outputControl   outputTime;//timeStep;
//         log             true;
//         valueOutput     true;
//         source          patch;
//         sourceName      wall;
//         operation       sum;
// 
//         fields
//         (
//             phi
//         );
//         surfaceFormat null;
//     }
// );
// ************************************************************************* //
